# Default values for geo-ip-finder.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: khodesaeed/geo-ip-finder
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart version.
  tag: "1.1.0"

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  metricsPort: 5050

# Environment variables for the application
# Use this section to pass sensitive information from Kubernetes Secrets
env:
  IPINFO_TOKEN: "aa419624904b0e"
  DB_HOST: "geo-ip-finder-db-rw" # This is the service name of the CNPG cluster
  DB_PORT: "5432"
  DB_NAME: "geo_ip_db" # The database name defined in the CNPG Cluster
  DB_USER_SECRET: "geo-ip-finder-db-app" # The secret name created by CNPG
  DB_USER_SECRET_KEY_USERNAME: "username"
  DB_USER_SECRET_KEY_PASSWORD: "password"

# Liveness and Readiness Probes for Kubernetes
probes:
  liveness:
    enabled: true
    path: "/live"
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
  readiness:
    enabled: true
    path: "/ready"
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6

# ServiceMonitor for Prometheus Operator
serviceMonitor:
  enabled: true
  path: "/metrics"
  interval: 15s

# Ingress for exposing the service
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: geo-ip.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Configuration for the CloudNativePG Cluster
database:
  clusterName: "geo-ip-finder-db"
  instances: 1
  storageSize: "1Gi"
  storageClass: longhorn
  primaryUpdateStrategy: supervised
  databaseName: "geo_ip_db"
  owner: "geo_ip_user"
  secretName: "geo-ip-finder-db-user-secret"

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

# Resource requests and limits
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 256Mi

# Pod and container security context
podSecurityContext: {}
securityContext: {}

# Service account configuration
serviceAccount:
  create: true
  name: ""

# Default values for your custom dashboard.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

dashboard:
  # Set to true to enable the deployment of the GrafanaDashboard CRD.
  enabled: true
  folder: "Geo IP API App"

  # The JSON content of your Grafana dashboard.
  # This is the content from the selected Canvas document.
  json: |
    {
    "annotations": {
    "list": [
    {
    "builtIn": 1,
    "datasource": {
    "type": "datasource",
    "uid": "grafana"
    },
    "enable": true,
    "hide": true,
    "iconColor": "rgba(0, 211, 255, 1)",
    "name": "Annotations & Alerts",
    "type": "dashboard"
    }
    ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 1,
    "id": null,
    "links": [],
    "liveNow": false,
    "panels": [
    {
    "datasource": {
    "type": "prometheus",
    "uid": "prometheus"
    },
    "gridPos": {
    "h": 8,
    "w": 12,
    "x": 0,
    "y": 0
    },
    "id": 1,
    "options": {
    "colorMode": "value",
    "graphMode": "none",
    "justifyMode": "auto",
    "orientation": "horizontal",
    "reduceOptions": {
    "calcs": [
    "lastNotNull"
    ],
    "fields": "",
    "values": false
    },
    "showPercent": false
    },
    "targets": [
    {
    "datasource": {
    "type": "prometheus",
    "uid": "prometheus"
    },
    "editorMode": "code",
    "expr": "sum(http_requests_total)",
    "refId": "A"
    }
    ],
    "title": "Total Requests",
    "type": "stat"
    },
    {
    "datasource": {
    "type": "prometheus",
    "uid": "prometheus"
    },
    "fieldConfig": {
    "defaults": {
    "color": {
    "mode": "palette-classic"
    },
    "custom": {
    "axisCenteredZero": false,
    "axisColorMode": "text",
    "axisLabel": "",
    "axisPlacement": "auto",
    "barAlignment": 0,
    "drawStyle": "line",
    "fillOpacity": 10,
    "gradientMode": "none",
    "hideFrom": {
    "legend": false,
    "tooltip": false,
    "viz": false
    },
    "lineInterpolation": "smooth",
    "lineWidth": 1,
    "pointSize": 5,
    "scaleDistribution": {
    "type": "linear"
    },
    "showPoints": "auto",
    "spanNulls": false,
    "stacking": {
    "group": "A",
    "mode": "none"
    },
    "thresholdsStyle": {
    "mode": "off"
    }
    },
    "unit": "s"
    },
    "overrides": []
    },
    "gridPos": {
    "h": 8,
    "w": 12,
    "x": 12,
    "y": 0
    },
    "id": 2,
    "options": {
    "tooltip": {
    "mode": "single",
    "sort": "none"
    }
    },
    "targets": [
    {
    "datasource": {
    "type": "prometheus",
    "uid": "prometheus"
    },
    "editorMode": "code",
    "expr": "histogram_quantile(0.95, sum(rate(request_latency_seconds_bucket[5m])) by (le, path))",
    "refId": "A"
    }
    ],
    "title": "P95 Latency",
    "type": "timeseries"
    },
    {
    "datasource": {
    "type": "prometheus",
    "uid": "prometheus"
    },
    "gridPos": {
    "h": 8,
    "w": 12,
    "x": 0,
    "y": 8
    },
    "id": 3,
    "options": {
    "pieType": "donut",
    "reduceOptions": {
    "calcs": [
    "sum"
    ],
    "fields": "",
    "values": false
    },
    "tooltipOptions": {
    "mode": "single",
    "sort": "none"
    }
    },
    "targets": [
    {
    "datasource": {
    "type": "prometheus",
    "uid": "prometheus"
    },
    "editorMode": "code",
    "expr": "sum by (status) (http_requests_total)",
    "refId": "A"
    }
    ],
    "title": "Requests by Status",
    "type": "piechart"
    },
    {
    "datasource": {
    "type": "prometheus",
    "uid": "prometheus"
    },
    "fieldConfig": {
    "defaults": {
    "color": {
    "mode": "palette-classic"
    },
    "custom": {
    "axisCenteredZero": false,
    "axisColorMode": "text",
    "axisLabel": "",
    "axisPlacement": "auto",
    "barAlignment": 0,
    "drawStyle": "line",
    "fillOpacity": 10,
    "gradientMode": "none",
    "hideFrom": {
    "legend": false,
    "tooltip": false,
    "viz": false
    },
    "lineInterpolation": "smooth",
    "lineWidth": 1,
    "pointSize": 5,
    "scaleDistribution": {
    "type": "linear"
    },
    "showPoints": "auto",
    "spanNulls": false,
    "stacking": {
    "group": "A",
    "mode": "none"
    },
    "thresholdsStyle": {
    "mode": "off"
    }
    },
    "unit": "s"
    },
    "overrides": []
    },
    "gridPos": {
    "h": 8,
    "w": 12,
    "x": 12,
    "y": 8
    },
    "id": 4,
    "options": {
    "tooltip": {
    "mode": "single",
    "sort": "none"
    }
    },
    "targets": [
    {
    "datasource": {
    "type": "prometheus",
    "uid": "prometheus"
    },
    "editorMode": "code",
    "expr": "avg(inprogress_requests)",
    "refId": "A"
    }
    ],
    "title": "In-flight Requests",
    "type": "timeseries"
    }
    ],
    "refresh": "5s",
    "schemaVersion": 37,
    "style": "dark",
    "tags": [],
    "templating": {
    "list": []
    },
    "time": {
    "from": "now-1h",
    "to": "now"
    },
    "timepicker": {
    "refresh_intervals": [
    "5s",
    "10s",
    "30s",
    "1m",
    "5m",
    "15m",
    "30m",
    "1h",
    "2h",
    "1d"
    ]
    },
    "timezone": "browser",
    "title": "API Dashboard",
    "uid": "api-dashboard-1"
    }
